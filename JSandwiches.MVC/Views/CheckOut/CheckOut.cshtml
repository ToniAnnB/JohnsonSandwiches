@model JSandwiches.MVC.Models.CheckOutModel
@{
    var clientId = ViewBag.PayPalClientId;
    var secret = ViewBag.PayPalSecret;
    var url = ViewBag.PayPalUrl;
    ViewBag.TabName = "";
}

<script src="https://www.paypal.com/sdk/js?client-id=@(clientId)&currency=USD"></script>



<div>
    <label>Total</label>
    <input asp-for="@Model.TotalAmount" />
</div>
<div>
    <label>Receipt Number</label>
    <input asp-for="@Model.ReceiptNumber" />
</div>
<div id="notification-container"></div>
<div id="paypal-button-container">
</div>



<script>
    let paypal_buttons = paypal.Buttons({
        createOrder() {
            return fetch("/CheckOut/CreateOrder", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                }
            })
                .then((response) => response.json())
                .then((order) => order.id);
        },
        onApprove(data) {
            paypal_buttons.close();
            // This function captures the funds from the transaction.
            return fetch("/CheckOut/CompleteOrder", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    orderID: data.orderID
                })
            })
                .then((response) => response.json())
                .then((details) => {
                    // This function shows a transaction success message to your buyer.
                    if (details == "success") {
                        document.getElementById("notification-container").innerHTML =
                            '<div class="alert alert-success" role="alert">The order is created successfully!<div>';
                    }
                    else {
                        document.getElementById("notification-container").innerHTML =
                            '<div class="alert alert-danger" role="alert">'+details.value+' !<div>';
                    }
                    //alert('Transaction completed by ' + details.payer.name.given_name);
                });
        },
        onCancel(data) {
            // Show a cancel page, or return to cart
            document.getElementById("notification-container").innerHTML =
                '<div class="alert alert-danger" role="alert">Order canceled!<div>';

            return fetch("/CheckOut/CancelOrder", {
                method: "POST",
                body: JSON.stringify({
                    orderID: data.orderID
                })
            })
        },
        onError(err) {
            // For example, redirect to a specific error page
            document.getElementById("notification-container").innerHTML =
                '<div class="alert alert-danger" role="alert">Failed to create order!!!<div>';
        }
    });
    paypal_buttons.render('#paypal-button-container');
</script>

